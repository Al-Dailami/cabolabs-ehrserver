<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0061)http://omarello.com/2010/10/working-with-grails-transactions/ -->
<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-US"><head profile="http://gmpg.org/xfn/11"><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	

	<title>Working with Transactions in Grails – train of thought</title>
	
	<link rel="alternate" type="application/rss+xml" href="http://omarello.com/feed/" title="train of thought latest posts">
	<link rel="alternate" type="application/rss+xml" href="http://omarello.com/comments/feed/" title="train of thought latest comments">
	<link rel="pingback" href="http://omarello.com/xmlrpc.php">
		<link rel="archives" title="September 2011" href="http://omarello.com/2011/09/">
	<link rel="archives" title="February 2011" href="http://omarello.com/2011/02/">
	<link rel="archives" title="October 2010" href="http://omarello.com/2010/10/">
	<link rel="archives" title="September 2010" href="http://omarello.com/2010/09/">
	<link rel="archives" title="August 2010" href="http://omarello.com/2010/08/">
	
	<link rel="stylesheet" type="text/css" media="screen" href="./Working with Transactions in Grails – train of thought_files/css.php">

	<!--[if lte IE 7]>
		<link rel="stylesheet" href="http://omarello.com/wp-content/themes/carrington-blog/css/ie.css" type="text/css" media="screen" />
	<![endif]-->
	
	<!--[if lte IE 6]>
		<link rel="stylesheet" href="http://omarello.com/wp-content/themes/carrington-blog/css/ie6.css" type="text/css" media="screen" />

		<script type="text/javascript" src="http://omarello.com/wp-content/themes/carrington-blog/js/DD_belatedPNG.js"></script>
		<script type="text/javascript">
			DD_belatedPNG.fix('img, #developer-link a');
		</script>
	<![endif]-->
	
	<link rel="alternate" type="application/rss+xml" title="train of thought » Working with Transactions in Grails Comments Feed" href="http://omarello.com/2010/10/working-with-grails-transactions/feed/">
<link rel="stylesheet" id="contact-form-7-css" href="./Working with Transactions in Grails – train of thought_files/styles.css" type="text/css" media="all">
<script src="./Working with Transactions in Grails – train of thought_files/quant.js" async="" type="text/javascript"></script><script type="text/javascript" async="" src="./Working with Transactions in Grails – train of thought_files/ga.js"></script><script type="text/javascript" src="./Working with Transactions in Grails – train of thought_files/jquery.js"></script>
<script type="text/javascript" src="./Working with Transactions in Grails – train of thought_files/carrington.js"></script>
<script type="text/javascript" src="./Working with Transactions in Grails – train of thought_files/thickbox.js"></script>
<script type="text/javascript" src="./Working with Transactions in Grails – train of thought_files/external-tracking.min.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://omarello.com/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://omarello.com/wp-includes/wlwmanifest.xml"> 
<link rel="prev" title="Customizing authentication in your grails app" href="http://omarello.com/2010/09/grails-customize-authentication/">
<link rel="next" title="Creating mobile web applications with jQuery mobile and Grails" href="http://omarello.com/2010/10/mobile-web-apps-with-jquery-mobile-and-grails/">
<meta name="generator" content="WordPress 3.4.2">
<link rel="canonical" href="./Working with Transactions in Grails – train of thought_files/Working with Transactions in Grails – train of thought.htm">
<link rel="shortlink" href="http://wp.me/p12stt-G">

<link rel="stylesheet" type="text/css" media="screen" href="./Working with Transactions in Grails – train of thought_files/thickbox.css">
		
<script type="text/javascript">
var CFCT_URL = "http://omarello.com";
var CFCT_AJAX_LOAD = true;
</script>
	
<script type="text/javascript">
tb_pathToImage = "http://omarello.com/wp-content/themes/carrington-blog/carrington-core/lightbox/img/loadingAnimation.gif";
jQuery(function($) {
	$("a.thickbox").each(function() {
		var url = $(this).attr("rel");
		var post_id = $(this).parents("div.post").attr("id");
		$(this).attr("href", url).attr("rel", post_id);
	});
});
</script>
		<link rel="stylesheet" type="text/css" href="./Working with Transactions in Grails – train of thought_files/shCore.css"><link rel="stylesheet" type="text/css" href="./Working with Transactions in Grails – train of thought_files/shThemeDefault.css"><meta id="syntaxhighlighteranchor" name="syntaxhighlighter-version" content="3.1.3">
<!-- Google Analytics Tracking by Google Analyticator 6.2: http://ronaldheft.com/code/analyticator/ -->
<script type="text/javascript">
	var analyticsFileTypes = [''];
	var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-18103167-1']);
	_gaq.push(['_trackPageview']);
	_gaq.push(['_trackPageLoadTime']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
<link type="text/css" rel="stylesheet" href="chrome-extension://cpngackimfmofbokmjmljamhdncknpmg/style.css"><script type="text/javascript" charset="utf-8" src="chrome-extension://cpngackimfmofbokmjmljamhdncknpmg/page_context.js"></script></head>

<body screen_capture_injected="true">
	<div id="page">
		<div id="top"><a class="accessibility" href="http://omarello.com/2010/10/working-with-grails-transactions/#content">Skip to content</a></div>
		<hr class="lofi">
		<div id="header" class="section">
			<div class="wrapper">
				<strong id="blog-title"><a href="http://omarello.com/" rel="home">train of thought</a></strong>
				<p id="blog-description"></p>
				<div id="navigation">
					<ul class="nav clearfix">
						<li class="page_item page-item-2 first-child"><a href="http://omarello.com/about/">About</a></li>
<li class="page_item page-item-4"><a href="http://omarello.com/contact/">Contact</a></li>
						<li class="secondary"><a href="http://omarello.com/wp-login.php">Log in</a></li>
						 
					</ul>
				</div><!-- #navigation -->
			</div><!-- .wrapper -->
		</div><!-- #header -->
		<div id="sub-header" class="section">
			<div class="wrapper">
				
<form method="get" id="cfct-search" action="http://omarello.com/" onsubmit="location.href=this.action+&#39;search/&#39;+encodeURIComponent(this.s.value).replace(/%20/g, &#39;+&#39;); return false;">
	<div>
		<input type="text" id="cfct-search-input" name="s" value="" size="15">
		<input type="submit" name="submit_button" value="Search">
	</div>
</form>				<div id="all-categories">
					<strong id="all-categories-title">Categories:</strong>
					<ul class="nav clearfix">
							<li class="cat-item cat-item-19 first-child"><a href="http://omarello.com/category/entertainment/">Entertainment</a>
</li>
	<li class="cat-item cat-item-3"><a href="http://omarello.com/category/programming/">Programming</a>
</li>
					</ul>
				</div><!-- #list-categories -->
			</div><!-- .wrapper -->
		</div><!--#sub-header-->
		<hr class="lofi">
		<div id="main" class="section">
			<div class="wrapper">
<div id="content">
<div id="post-content-42" class="post-42 post type-post status-publish format-standard hentry category-programming tag-grails-transactions full">
	
	<h1 class="entry-title full-title"><a href="./Working with Transactions in Grails – train of thought_files/Working with Transactions in Grails – train of thought.htm" title="Permanent link to Working with Transactions in Grails" rel="bookmark" rev="post-42">Working with Transactions in Grails</a></h1>
	
	<div class="entry-content full-content">
<p>At a certain point when developing an application you will run into a situation that requires you to use transactions. With transactions (in it’s simplest form) you basically control when/whether to commit/rollback a bunch of related sql inserts, updates and/or deletes depending on your business requirements.</p>
<p>I’ve been tinkering around with the different options available in grails to work with transactions and would like to share those different options with who ever might need this info through a very simplistic example just to make things short (keep in mind that behind the scenes it is actually Spring that is managing those transactions)<br>
To begin with, I will explain the scenario we will be working with, and then present the different pieces of source code that I’ve used.</p>
<p>First, this simple application will work with 3 domain classes; Foo, Bar and Baz , all three domains have 1 field called name and a unique constraint on that name. My application has a requirement that<br>
Every time an instance of “Foo” is saved, an instance with the same name should be saved in Bar and Baz<br>
Since each class has a unique constraint on it’s name, saving an instance into Bar and/or Baz could fail when trying to save Foo, in which case, neither Foo nor Bar nor Baz should be saved.</p>
<p>It’s a very weird requirement (and technically you can could achieve those requirements without using transactions), but it serves the purpose of the example. Below is an example flow of someone using the application and what is expected to happen.</p>
<table style="border:1px solid #51555C;border-collapse: collapse;padding:3px;">
<tbody><tr>
<td style="border:1px solid #51555C;padding:3px;" width="6%">Step</td>
<td style="border:1px solid #51555C;padding:3px;" width="35%">Action</td>
<td style="border:1px solid #51555C;padding:3px;">Outcome</td>
</tr>
<tr>
<td style="border:1px solid #51555C;padding:3px;">1</td>
<td style="border:1px solid #51555C;padding:3px;">Add a new Bar with name “Bar1”</td>
<td style="border:1px solid #51555C;padding:3px;">A new Bar  with name “Bar1” is added</td>
</tr>
<tr>
<td style="border:1px solid #51555C;padding:3px;">2</td>
<td style="border:1px solid #51555C;padding:3px;">Add a new Baz with name “Baz1”</td>
<td style="border:1px solid #51555C;padding:3px;">A new Baz with name “Baz1” is added</td>
</tr>
<tr>
<td style="border:1px solid #51555C;padding:3px;">3</td>
<td style="border:1px solid #51555C;padding:3px;">Add a new Foo with name “Foo1”</td>
<td style="border:1px solid #51555C;padding:3px;">
A new  Foo with name “Foo1” is added<br>
A new Bar with name “Foo1” is added<br>
A new Baz with name “Foo1” is added
</td>
</tr>
<tr>
<td style="border:1px solid #51555C;padding:3px;">4</td>
<td style="border:1px solid #51555C;padding:3px;">Add a new Foo with name “Bar1”</td>
<td style="border:1px solid #51555C;padding:3px;">An Error message should be returned and neither Foo, nor Bar, nor Baz should be added since “Bar1” violates a unique constraint on Bar</td>
</tr>
<tr>
<td style="border:1px solid #51555C;padding:3px;">5</td>
<td style="border:1px solid #51555C;padding:3px;">Add a new Foo with name “Baz1”</td>
<td style="border:1px solid #51555C;padding:3px;">An Error message should be returned and neither Foo, nor Bar, nor Baz should be added since “Baz1” violates a unique constraint on Baz</td>
</tr>
<tr>
<td style="border:1px solid #51555C;padding:3px;">6</td>
<td style="border:1px solid #51555C;padding:3px;">etc…</td>
<td style="border:1px solid #51555C;padding:3px;"></td>
</tr>
</tbody></table>
<p><br></p>
<h3>Implementing Domains and Controllers</h3>
<p>Ok, so how do we go about implementing this. Lets start by modeling the domain classes. </p>
<p>Here is an example implementation of the domain Bar, the other classes are exactly the same but with a different class name</p>
<div><div id="highlighter_548755" class="syntaxhighlighter  groovy"><div class="toolbar"><span><a href="http://omarello.com/2010/10/working-with-grails-transactions/#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="groovy keyword">class</code> <code class="groovy plain">Bar {</code></div><div class="line number2 index1 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">String name</code></div><div class="line number3 index2 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">static</code> <code class="groovy plain">constraints = {</code></div><div class="line number4 index3 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">name unique:true</code></div><div class="line number5 index4 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">}</code></div><div class="line number6 index5 alt1"><code class="groovy plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Now that I have the domains ready, I will use <b>grails generate-all</b> for each domain class, to generate views and controllers, and then I will do a small change to the Foo controller to add the functionality of adding a Bar and a Baz when saving a Foo instance. (This is will show how things could go wrong)</p>
<p>Add the following to the FooController.groovy under the save action</p>
<div><div id="highlighter_436358" class="syntaxhighlighter  groovy"><div class="toolbar"><span><a href="http://omarello.com/2010/10/working-with-grails-transactions/#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="groovy keyword">def</code> <code class="groovy plain">save = {</code></div><div class="line number2 index1 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">new</code> <code class="groovy plain">Bar(params).save(flush:true)</code></div><div class="line number3 index2 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">new</code> <code class="groovy plain">Baz(params).save(flush:true)</code></div><div class="line number4 index3 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">def</code> <code class="groovy plain">fooInstance = </code><code class="groovy keyword">new</code> <code class="groovy plain">Foo(params)</code></div><div class="line number5 index4 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">if</code> <code class="groovy plain">(fooInstance.save(flush: true)) {</code></div><div class="line number6 index5 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">flash.message = </code><code class="groovy string">"${message(code: 'default.created.message', args: [message(code: 'foo.label', default: 'Foo'), fooInstance.id])}"</code></div><div class="line number7 index6 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">redirect(action: </code><code class="groovy string">"show"</code><code class="groovy plain">, id: fooInstance.id)</code></div><div class="line number8 index7 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">}</code></div><div class="line number9 index8 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">else</code> <code class="groovy plain">{</code></div><div class="line number10 index9 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">render(view: </code><code class="groovy string">"create"</code><code class="groovy plain">, model: [fooInstance: fooInstance])</code></div><div class="line number11 index10 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">}</code></div><div class="line number12 index11 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>What this basically does is save a Bar instance, a Baz instance and a Foo instance when trying to save a Foo instance. We can run the application now and try to follow the same steps outlined above.</p>
<p>You will notice that after completing step 4, a Bar1 instance was added to Foo as well as Baz which is wrong, since a validation constraint was violated on Bar.<br>
I could have checked for validation errors on Bar and Baz to prevent the inconsistent behavior, but the whole purpose is to test out the transactions and how to use them <img src="./Working with Transactions in Grails – train of thought_files/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
<p><br></p>
<h3>Adding Transactions to the mix</h3>
<p>One of many ways to use transactions is using programmatic transactions which involves working with the <strong>withTransaction</strong> method. I will change the above code to use the <strong>withTransaction</strong> and see what happens. Change the save action to look something like this.</p>
<div><div id="highlighter_10502" class="syntaxhighlighter  groovy"><div class="toolbar"><span><a href="http://omarello.com/2010/10/working-with-grails-transactions/#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="groovy keyword">def</code> <code class="groovy plain">save = {</code></div><div class="line number2 index1 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">def</code> <code class="groovy plain">fooInstance = </code><code class="groovy keyword">new</code> <code class="groovy plain">Foo(params)</code></div><div class="line number3 index2 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">Foo.withTransaction{ status -&gt;</code></div><div class="line number4 index3 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">try</code><code class="groovy plain">{</code></div><div class="line number5 index4 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">new</code> <code class="groovy plain">Bar(params).save(flush:true, failOnError:true)</code></div><div class="line number6 index5 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">new</code> <code class="groovy plain">Baz(params).save(flush:true, failOnError:true)</code></div><div class="line number7 index6 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">fooInstance.save(flush: true, failOnError:true);</code></div><div class="line number8 index7 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">}</code><code class="groovy keyword">catch</code><code class="groovy plain">(Exception exp){</code></div><div class="line number9 index8 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">fooInstance.errors.reject(</code></div><div class="line number10 index9 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy string">'foo.name.inuse'</code><code class="groovy plain">,</code></div><div class="line number11 index10 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">[</code><code class="groovy string">"${params.name}"</code><code class="groovy plain">].toArray() </code><code class="groovy keyword">as</code> <code class="groovy plain">Object[],</code></div><div class="line number12 index11 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy string">'Sorry Name [{0}] is already used by either Foor, Bar or Baz!!!'</code><code class="groovy plain">)</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">status.setRollbackOnly()</code></div><div class="line number15 index14 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">}</code></div><div class="line number16 index15 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">}</code></div><div class="line number17 index16 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number18 index17 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">if</code> <code class="groovy plain">(!fooInstance.hasErrors()) {</code></div><div class="line number19 index18 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">flash.message = </code><code class="groovy string">"${message(code: 'default.created.message', args: [message(code: 'foo.label', default: 'Foo'), fooInstance.id])}"</code></div><div class="line number20 index19 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">redirect(action: </code><code class="groovy string">"show"</code><code class="groovy plain">, id: fooInstance.id)</code></div><div class="line number21 index20 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">}</code></div><div class="line number22 index21 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">else</code> <code class="groovy plain">{</code></div><div class="line number23 index22 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">render(view: </code><code class="groovy string">"create"</code><code class="groovy plain">, model: [fooInstance: fooInstance])</code></div><div class="line number24 index23 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">}</code></div><div class="line number25 index24 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>First thing to note, is that the save logic is moved inside the <em>Foo.withTransaction{}</em> block. Everything inside this block is run in a transaction as the name indicates. For simplicity, I have set the <strong>failOnError</strong> to true when saving, this will throw an exception when we hit the unique constraint, and will allow me to <em>rollback the transaction</em> by setting  <strong>status.setRollbackOnly()</strong>, otherwise, things will carry on in the normal way.<br>
If you try to run the application now, you will notice that it behaves according to the requirements set at the beginning.</p>
<p>Another way to work with transactions, is through grails Services. I will go ahead and create a FooService (<strong>grails create-service FooService</strong>). The first thing you will notice when you look at the newly created service is the following line of code</p>
<div><div id="highlighter_394844" class="syntaxhighlighter nogutter  plain"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="plain plain">static transactional = true</code></div></div></td></tr></tbody></table></div></div>
<p>This enables automatic transaction management for the service. Setting this to false, will disable the automatic transaction management. What does automatic transaction management mean? It means that every method in your service is automatically wrapped in a transaction, which will either commit if no exceptions are thrown, or will rollback if an exception is thrown. I will try it out.</p>
<p>I will move the code above to the service, it will look something like this.</p>
<div><div id="highlighter_389853" class="syntaxhighlighter  groovy"><div class="toolbar"><span><a href="http://omarello.com/2010/10/working-with-grails-transactions/#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="groovy keyword">class</code> <code class="groovy plain">FooService {</code></div><div class="line number2 index1 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number3 index2 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">static</code> <code class="groovy plain">transactional = true</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">def</code> <code class="groovy plain">saveFoo(params) {</code></div><div class="line number6 index5 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">def</code> <code class="groovy plain">foo = </code><code class="groovy keyword">new</code> <code class="groovy plain">Foo(params)</code></div><div class="line number7 index6 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">new</code> <code class="groovy plain">Bar(params).save(flush:true, failOnError:true)</code></div><div class="line number8 index7 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">new</code> <code class="groovy plain">Baz(params).save(flush:true, failOnError:true)</code></div><div class="line number9 index8 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">foo.save(flush:true, failOnError:true)</code></div><div class="line number10 index9 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">return</code> <code class="groovy plain">foo</code></div><div class="line number11 index10 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">}</code></div><div class="line number12 index11 alt1"><code class="groovy plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Since I have failOnError set to true, then an exception will be thrown, which will trigger the rollback of the transaction, otherwise, things will continue normally.</p>
<p>Now In the controller, I will <em>inject the new service</em> and then change the save action as follows</p>
<div><div id="highlighter_763956" class="syntaxhighlighter  groovy"><div class="toolbar"><span><a href="http://omarello.com/2010/10/working-with-grails-transactions/#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="groovy keyword">def</code> <code class="groovy plain">save = {</code></div><div class="line number2 index1 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">def</code> <code class="groovy plain">fooInstance = </code><code class="groovy keyword">new</code> <code class="groovy plain">Foo(params)</code></div><div class="line number3 index2 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">try</code><code class="groovy plain">{</code></div><div class="line number4 index3 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">fooInstance = fooService.saveFoo(params)</code></div><div class="line number5 index4 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">}</code><code class="groovy keyword">catch</code><code class="groovy plain">(RuntimeException e){</code></div><div class="line number6 index5 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">fooInstance.errors.reject(</code></div><div class="line number7 index6 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy string">'foo.name.inuse'</code><code class="groovy plain">,</code></div><div class="line number8 index7 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">[</code><code class="groovy string">"${params.name}"</code><code class="groovy plain">].toArray() </code><code class="groovy keyword">as</code> <code class="groovy plain">Object[],</code></div><div class="line number9 index8 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy string">'Sorry Name [{0}] is already used by either Foor, Bar or Baz!!!'</code><code class="groovy plain">)</code></div><div class="line number10 index9 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">}</code></div><div class="line number11 index10 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number12 index11 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">if</code> <code class="groovy plain">(!fooInstance.hasErrors()) {</code></div><div class="line number13 index12 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">flash.message = </code><code class="groovy string">"${message(code: 'default.created.message', args: [message(code: 'foo.label', default: 'Foo'), fooInstance.id])}"</code></div><div class="line number14 index13 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">redirect(action: </code><code class="groovy string">"show"</code><code class="groovy plain">, id: fooInstance.id)</code></div><div class="line number15 index14 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">}</code></div><div class="line number16 index15 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy keyword">else</code> <code class="groovy plain">{</code></div><div class="line number17 index16 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">render(view: </code><code class="groovy string">"create"</code><code class="groovy plain">, model: [fooInstance: fooInstance])</code></div><div class="line number18 index17 alt1"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">}</code></div><div class="line number19 index18 alt2"><code class="groovy spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="groovy plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>This should result in the same exact behavior as the programmatic transaction.</p>
<p>As you can see, it is very easy to work with transactions in grails, although the above example is a little contrived, but hopefully it was helpful to illustrate some of the ways to use transactions in grails. There are other ways to define transactions and control them which are found in the user guide, I haven’t tried them out yet since I didn’t really need to, but fell free to do so.</p>
<p>On another note, if you find yourself usgin  failOnError:true a lot, you can always configure it to be the default. As a matter of fact, there is currently a discussion on the grails mailing list whether to change this to be the default behavior or to add a new method to achieve this. You can <a href="http://grails.1312388.n4.nabble.com/Changing-the-default-behaviour-of-save-td2875400.html">read all about it over here</a>.</p>
		<div class="clear"></div>
	</div><!-- .entry-content-->
	
	<p class="filed categories alt-font tight">Posted in <a href="http://omarello.com/category/programming/" title="View all posts in Programming" rel="category tag">Programming</a>.</p>
	<p class="filed tags alt-font tight">Tagged with <a href="http://omarello.com/tag/grails-transactions/" rel="tag">grails transactions</a>.</p>
	<p class="comments-link"><a href="http://omarello.com/2010/10/working-with-grails-transactions/#comments" rev="post-42" title="Comment on Working with Transactions in Grails">8 comments</a></p>

	<p class="by-line">
		<span class="author vcard full-author">
			<span class="by alt-font">By</span> <a class="url fn" href="http://omarello.com/author/omar-marji/" title="View all posts by omarji">omarji</a>		</span>
		<span class="date full-date"><span class="ndash alt-font">–</span> <abbr class="published" title="2010-10-11T22:07">October 11, 2010</abbr></span>
	</p><!--/by-line-->

	<div id="post-comments-42-target"></div>
	<div class="clear"></div>
	
	</div><!-- .post -->	<div id="comments">

<div class="rule-major"><hr></div>

<h2 class="h1 comments-title">8 Responses</h2>

<p>Stay in touch with the conversation, subscribe to the <a class="feed" rel="alternate" href="http://omarello.com/2010/10/working-with-grails-transactions/feed/"><acronym title="Really Simple Syndication">RSS</acronym> feed for comments on this post</a>.</p>

	<ol class="commentlist hfeed">

<li class="li-comment" id="li-comment-213">
	<div class="div-comment" id="div-comment-213">

<div id="comment-213" class="comment even thread-even depth-1 hentry">
	<address class="vcard author entry-title comment-author">
		<span class="photo avatar"><img alt="" src="./Working with Transactions in Grails – train of thought_files/8d22bbcabe97a890cd3623560a91f54c" class="avatar avatar-48 photo" height="48" width="48"></span>
<cite class="fn"><a href="http://myopendraft.blogspot.com/" rel="external nofollow" class="url">Alireza Haghighatkhah</a></cite> <span class="says">says</span>	</address><!--.vcard-->

	<div class="entry-content comment-content">
<p class="last-child">Working with grails is very funny and productive. thanks for your helpful post.</p>
	</div><!--.entry-content-->
	<div class="clear"></div>
	<div class="comment-meta commentmetadata small">
		<span class="date comment-date">
			<abbr class="published" title="2010-10-11T23:04">October 11, 2010, <a title="Permanent link to this comment" rel="bookmark" href="http://omarello.com/2010/10/working-with-grails-transactions/#comment-213">23:04</a></abbr>
		</span><!--.date-->
<a class="comment-reply-link" href="http://omarello.com/2010/10/working-with-grails-transactions/?replytocom=213#respond-p42" onclick="return addComment.moveForm(&quot;comment-213&quot;, &quot;213&quot;, &quot;respond-p42&quot;, &quot;42&quot;)">Reply</a>	</div>
</div><!--.comment-->	</div>
</li>

<li class="li-comment" id="li-comment-10711">
	<div class="div-comment" id="div-comment-10711">

<div id="comment-10711" class="comment odd alt thread-odd thread-alt depth-1 hentry">
	<address class="vcard author entry-title comment-author">
		<span class="photo avatar"><img alt="" src="./Working with Transactions in Grails – train of thought_files/0f4cf24fc683327ac85c2bc3e0381a7e" class="avatar avatar-48 photo" height="48" width="48"></span>
<cite class="fn">Jose</cite> <span class="says">says</span>	</address><!--.vcard-->

	<div class="entry-content comment-content">
<p class="last-child">Thank, it helped me <img src="./Working with Transactions in Grails – train of thought_files/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
	</div><!--.entry-content-->
	<div class="clear"></div>
	<div class="comment-meta commentmetadata small">
		<span class="date comment-date">
			<abbr class="published" title="2012-08-14T01:21">August 14, 2012, <a title="Permanent link to this comment" rel="bookmark" href="http://omarello.com/2010/10/working-with-grails-transactions/#comment-10711">01:21</a></abbr>
		</span><!--.date-->
<a class="comment-reply-link" href="http://omarello.com/2010/10/working-with-grails-transactions/?replytocom=10711#respond-p42" onclick="return addComment.moveForm(&quot;comment-10711&quot;, &quot;10711&quot;, &quot;respond-p42&quot;, &quot;42&quot;)">Reply</a>	</div>
</div><!--.comment-->	</div>
</li>

<li class="li-comment" id="li-comment-11375">
	<div class="div-comment" id="div-comment-11375">

<div id="comment-11375" class="comment even thread-even depth-1 hentry">
	<address class="vcard author entry-title comment-author">
		<span class="photo avatar"><img alt="" src="./Working with Transactions in Grails – train of thought_files/c6eda7df05520c8627cfcb8854031c48" class="avatar avatar-48 photo" height="48" width="48"></span>
<cite class="fn">ke</cite> <span class="says">says</span>	</address><!--.vcard-->

	<div class="entry-content comment-content">
<p class="last-child">calling one service method from from another will be two separate tr , i mean tr wrapping another tr</p>
	</div><!--.entry-content-->
	<div class="clear"></div>
	<div class="comment-meta commentmetadata small">
		<span class="date comment-date">
			<abbr class="published" title="2012-09-29T18:56">September 29, 2012, <a title="Permanent link to this comment" rel="bookmark" href="http://omarello.com/2010/10/working-with-grails-transactions/#comment-11375">18:56</a></abbr>
		</span><!--.date-->
<a class="comment-reply-link" href="http://omarello.com/2010/10/working-with-grails-transactions/?replytocom=11375#respond-p42" onclick="return addComment.moveForm(&quot;comment-11375&quot;, &quot;11375&quot;, &quot;respond-p42&quot;, &quot;42&quot;)">Reply</a>	</div>
</div><!--.comment-->	</div>
</li>
	</ol>
	
<p class="comment-pagination"></p><h3 class="pings">Continuing the Discussion</h3>
	<ol class="pinglist commentlist hfeed">
		<li class="li-comment">
<div id="div-ping-220" class="pingback odd alt thread-odd thread-alt depth-1 ping hentry">
<cite class="vcard author fn entry-title"><a href="http://grailstutorial.org/working-with-transactions-in-grails/" rel="external nofollow" class="url">Working with Transactions in Grails - Grails Tutorial</a></cite> <span class="linked-to-this-post alt-font">linked to this post</span> 
	<span class="date alt-font">
		<span class="on">on</span> <abbr class="published" title="2010-10-13T05:00:03+0300">October 13, 2010</abbr>
	</span>
	<blockquote class="entry-summary" cite="http://grailstutorial.org/working-with-transactions-in-grails/"><p>[...] Check out the original for detail        &nbsp; [...]</p>
</blockquote> 
	</div><!--.ping-->		</li><!--.hentry-->
		<li class="li-comment">
<div id="div-ping-232" class="pingback even thread-even depth-1 ping hentry">
<cite class="vcard author fn entry-title"><a href="./Working with Transactions in Grails – train of thought_files/saved_resource" rel="external nofollow" class="url">Blog bookmarks 10/16/2010 « My Diigo bookmarks</a></cite> <span class="linked-to-this-post alt-font">linked to this post</span> 
	<span class="date alt-font">
		<span class="on">on</span> <abbr class="published" title="2010-10-16T07:32:43+0300">October 16, 2010</abbr>
	</span>
	<blockquote class="entry-summary" cite="./Working with Transactions in Grails – train of thought_files/saved_resource"><p>[...] Working with Transactions in Grails – train of thought [...]</p>
</blockquote> 
	</div><!--.ping-->		</li><!--.hentry-->
		<li class="li-comment">
<div id="div-ping-1107" class="trackback odd alt thread-odd thread-alt depth-1 ping hentry">
<cite class="vcard author fn entry-title"><a href="./Working with Transactions in Grails – train of thought_files/working-with-transactions-in-grails" rel="external nofollow" class="url">grailstutorial.org</a></cite> <span class="linked-to-this-post alt-font">linked to this post</span> 
	<span class="date alt-font">
		<span class="on">on</span> <abbr class="published" title="2011-01-17T04:58:17+0300">January 17, 2011</abbr>
	</span>
	<blockquote class="entry-summary" cite="./Working with Transactions in Grails – train of thought_files/working-with-transactions-in-grails"><p><strong>Working with Transactions in Grails…</strong></p>
<p>At a certain point when developing an application you will run into a situation that requires you to use transactions. With transactions (in it’s simplest form) you basically control when/whether to commit/rollback a bunch of related sql inserts, updat…</p>
</blockquote> 
	</div><!--.ping-->		</li><!--.hentry-->
		<li class="li-comment">
<div id="div-ping-2022" class="pingback even thread-even depth-1 ping hentry">
<cite class="vcard author fn entry-title"><a href="./Working with Transactions in Grails – train of thought_files/saved_resource(1)" rel="external nofollow" class="url">Hibernate/JPA and myBatis Considered – Dynacron Group</a></cite> <span class="linked-to-this-post alt-font">linked to this post</span> 
	<span class="date alt-font">
		<span class="on">on</span> <abbr class="published" title="2011-06-24T22:55:45+0300">June 24, 2011</abbr>
	</span>
	<blockquote class="entry-summary" cite="./Working with Transactions in Grails – train of thought_files/saved_resource(1)"><p>[...] Grails transactions defaults to basically an auto-commit=true model, but adds a one-liner to turn on transactions in an [...]</p>
</blockquote> 
	</div><!--.ping-->		</li><!--.hentry-->
		<li class="li-comment">
<div id="div-ping-2695" class="pingback odd alt thread-odd thread-alt depth-1 ping hentry">
<cite class="vcard author fn entry-title"><a href="./Working with Transactions in Grails – train of thought_files/saved_resource(2)" rel="external nofollow" class="url">Transakcyjność w kontrolerach « Świat J2EE</a></cite> <span class="linked-to-this-post alt-font">linked to this post</span> 
	<span class="date alt-font">
		<span class="on">on</span> <abbr class="published" title="2011-08-25T17:51:55+0300">August 25, 2011</abbr>
	</span>
	<blockquote class="entry-summary" cite="./Working with Transactions in Grails – train of thought_files/saved_resource(2)"><p>[...] transakcyjność z palucha  Ostatnie dwa rozwiązania są opisane tutaj: <a href="./Working with Transactions in Grails – train of thought_files/Working with Transactions in Grails – train of thought.htm" rel="nofollow">http://omarello.com/2010/10/working-with-grails-transactions/</a> Like this:LikeBe the first to like this [...]</p>
</blockquote> 
	</div><!--.ping-->		</li><!--.hentry-->
	</ol><!--/#pings-list-->

<div id="respond-p42">
	<form action="http://omarello.com/wp-comments-post.php" method="post" class="comment-form">
		<p class="comment-form-comment tight">
		<label class="h3" for="comment-p42">Leave a Reply <em id="cancel-comment-reply"><a rel="nofollow" id="cancel-comment-reply-link-p42" href="http://omarello.com/2010/10/working-with-grails-transactions/#respond-p42" style="display:none;">Cancel</a></em></label>
			<br class="lofi">
			<span class="comment-form-comment-area">
				<textarea id="comment-p42" name="comment" rows="8" cols="40"></textarea><br>
				<em class="some-html-is-ok"><abbr title="You can use: &lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; ">Some HTML is OK</abbr></em>
			</span>
		</p>
		<p class="comment-form-user-info tight">
			<input type="text" id="author-p42" name="author" value="" size="22">
			<label for="author-p42">Name <em>(required)</em></label>
		</p><!--/name-->
		<p class="comment-form-user-info tight">
			<input type="text" id="email-p42" name="email" value="" size="22">
			<label for="email-p42">Email  <em>(required, but never shared)</em></label>
		</p><!--/email-->
		<p class="comment-form-user-info tight">
			<input type="text" id="url-p42" name="url" value="" size="22">
			<label title="Your website address" for="url-p42">Web</label>
		</p><!--/url-->
		<p class="tight">
			<input name="submit" type="submit" value="Post comment">
			<span class="comment-form-trackback">or, reply to this post via <a rel="trackback" href="http://omarello.com/2010/10/working-with-grails-transactions/trackback/">trackback</a>.</span>
		</p>
<input type="hidden" name="comment_post_ID" value="42" id="comment_post_ID_p42">
<input type="hidden" name="comment_parent" id="comment_parent_p42" value="0">
<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="42b6d2e7f6"></p>	</form>
</div>
	</div><!--#comments-->

	<div class="pagination-single">
		<span class="previous">« <a href="http://omarello.com/2010/09/grails-customize-authentication/" rel="prev">Customizing authentication in your grails app</a></span>
		<span class="next"><a href="http://omarello.com/2010/10/mobile-web-apps-with-jquery-mobile-and-grails/" rel="next">Creating mobile web applications with jQuery mobile and Grails</a> »</span>
	</div>

</div><!--#content-->

<hr class="lofi">
<div id="sidebar">
	<div id="carrington-subscribe" class="widget">
		<h2 class="widget-title">Subscribe</h2>
		<a class="feed alignright" title="RSS 2.0 feed for posts" rel="alternate" href="http://omarello.com/feed/">
			<img src="./Working with Transactions in Grails – train of thought_files/rss-button.gif" alt="train of thought latest posts" title="train of thought latest posts">
		</a>
	</div><!--.widget-->
	<div id="carrington-about" class="widget">
		<div class="about">
			<h2 class="widget-title">About Me</h2>
<p>So, You want to know more about me? Well you can head over to the <a href="http://omarello.com/about/">About Me</a> page and knock yourself out <img src="./Working with Transactions in Grails – train of thought_files/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
		</div>
	</div><!--.widget-->

	<div id="primary-sidebar">
		<div id="recent-posts-3" class="widget widget_recent_entries">		<h2 class="widget-title">Recent Posts</h2>		<ul>
				<li><a href="http://omarello.com/2011/09/grails-custom-target-urls-after-login/" title="Configuring different target URLs after login according to user roles (grails spring security)">Configuring different target URLs after login according to user roles (grails spring security)</a></li>
				<li><a href="http://omarello.com/2011/02/grails-init-destory-session-scoped-services/" title="Grails: Initializing &amp; Destroying Session Scoped Services">Grails: Initializing &amp; Destroying Session Scoped Services</a></li>
				<li><a href="http://omarello.com/2010/10/mobile-web-apps-with-jquery-mobile-and-grails/" title="Creating mobile web applications with jQuery mobile and Grails">Creating mobile web applications with jQuery mobile and Grails</a></li>
				<li><a href="./Working with Transactions in Grails – train of thought_files/Working with Transactions in Grails – train of thought.htm" title="Working with Transactions in Grails">Working with Transactions in Grails</a></li>
				<li><a href="http://omarello.com/2010/09/grails-customize-authentication/" title="Customizing authentication in your grails app">Customizing authentication in your grails app</a></li>
				</ul>
		<div class="clear"></div></div><div id="text-3" class="widget widget_text">			<div class="textwidget"><a href="http://tutsplus.com/amember/go.php?r=39956&i=b51"><img src="./Working with Transactions in Grails – train of thought_files/nettuts_120x240.jpg" border="0" alt="Net Premium: web dev education from the professionals." width="120" height="240"></a></div>
		<div class="clear"></div></div>	</div><!--#primary-sidebar-->
	<div id="secondary-sidebar">
<div id="categories-3" class="widget widget_categories"><h2 class="widget-title">Categories</h2>		<ul>
	<li class="cat-item cat-item-19"><a href="http://omarello.com/category/entertainment/" title="View all posts filed under Entertainment">Entertainment</a> (1)
</li>
	<li class="cat-item cat-item-3"><a href="http://omarello.com/category/programming/" title="View all posts filed under Programming">Programming</a> (10)
</li>
		</ul>
<div class="clear"></div></div><div id="tag_cloud-3" class="widget widget_tag_cloud"><h2 class="widget-title">Tags</h2><div class="tagcloud"><a href="http://omarello.com/tag/ant/" class="tag-link-17" title="2 topics" style="font-size: 12.2pt;">ant</a>
<a href="http://omarello.com/tag/authentication/" class="tag-link-24" title="1 topic" style="font-size: 8pt;">authentication</a>
<a href="http://omarello.com/tag/concert/" class="tag-link-21" title="1 topic" style="font-size: 8pt;">concert</a>
<a href="http://omarello.com/tag/custom-tags/" class="tag-link-9" title="1 topic" style="font-size: 8pt;">custom tags</a>
<a href="http://omarello.com/tag/diy/" class="tag-link-10" title="1 topic" style="font-size: 8pt;">diy</a>
<a href="http://omarello.com/tag/enum/" class="tag-link-4" title="1 topic" style="font-size: 8pt;">enum</a>
<a href="http://omarello.com/tag/file/" class="tag-link-18" title="2 topics" style="font-size: 12.2pt;">file</a>
<a href="http://omarello.com/tag/full-text-search/" class="tag-link-12" title="1 topic" style="font-size: 8pt;">full-text search</a>
<a href="http://omarello.com/tag/grails/" class="tag-link-5" title="7 topics" style="font-size: 22pt;">grails</a>
<a href="http://omarello.com/tag/grails-transactions/" class="tag-link-25" title="1 topic" style="font-size: 8pt;">grails transactions</a>
<a href="http://omarello.com/tag/groovy/" class="tag-link-15" title="2 topics" style="font-size: 12.2pt;">groovy</a>
<a href="http://omarello.com/tag/javascript/" class="tag-link-6" title="1 topic" style="font-size: 8pt;">javascript</a>
<a href="http://omarello.com/tag/jquery/" class="tag-link-8" title="2 topics" style="font-size: 12.2pt;">jquery</a>
<a href="http://omarello.com/tag/jquery-mobile/" class="tag-link-26" title="1 topic" style="font-size: 8pt;">jquery mobile</a>
<a href="http://omarello.com/tag/live/" class="tag-link-22" title="1 topic" style="font-size: 8pt;">live</a>
<a href="http://omarello.com/tag/one-to-many/" class="tag-link-7" title="1 topic" style="font-size: 8pt;">one-to-many</a>
<a href="http://omarello.com/tag/plugins/" class="tag-link-14" title="1 topic" style="font-size: 8pt;">plugins</a>
<a href="http://omarello.com/tag/scaffolding/" class="tag-link-27" title="1 topic" style="font-size: 8pt;">scaffolding</a>
<a href="http://omarello.com/tag/search/" class="tag-link-11" title="1 topic" style="font-size: 8pt;">search</a>
<a href="http://omarello.com/tag/searchable/" class="tag-link-13" title="1 topic" style="font-size: 8pt;">searchable</a>
<a href="http://omarello.com/tag/services/" class="tag-link-29" title="1 topic" style="font-size: 8pt;">services</a>
<a href="http://omarello.com/tag/spring/" class="tag-link-28" title="1 topic" style="font-size: 8pt;">spring</a>
<a href="http://omarello.com/tag/spring-security/" class="tag-link-23" title="2 topics" style="font-size: 12.2pt;">spring security</a>
<a href="http://omarello.com/tag/sql/" class="tag-link-16" title="2 topics" style="font-size: 12.2pt;">sql</a>
<a href="http://omarello.com/tag/sting/" class="tag-link-20" title="1 topic" style="font-size: 8pt;">sting</a></div>
<div class="clear"></div></div>	</div><!--#secondary-sidebar-->
	<div class="clear"></div>
</div><!--#sidebar-->			<div class="clear"></div>
			</div><!-- .wrapper -->
		</div><!-- #main -->
		<hr class="lofi">
		<div id="footer" class="section">
			<div class="wrapper">		
				<p id="generator-link">Proudly powered by <a href="http://wordpress.org/" rel="generator">WordPress</a> and <a href="http://carringtontheme.com/" title="Carrington theme for WordPress">Carrington</a>.</p>
				<p id="developer-link"><a href="http://crowdfavorite.com/" title="Custom WordPress development, design and backup services." rel="developer designer">Carrington Theme by Crowd Favorite</a></p>
			</div><!--.wrapper-->
		</div><!--#footer -->
	</div><!--#page-->
	<!-- *** WP-Piwik - see http://www.braekling.de/wp-piwik-wpmu-piwik-wordpress/ -->
<!-- Piwik --> 
<script type="text/javascript">
var pkBaseURL = (("https:" == document.location.protocol) ? "https://omarello.com/piwik/" : "http://omarello.com/piwik/");
document.write(unescape("%3Cscript src='" + pkBaseURL + "piwik.js' type='text/javascript'%3E%3C/script%3E"));
</script><script src="./Working with Transactions in Grails – train of thought_files/piwik.js" type="text/javascript"></script><script type="text/javascript">
try {
  var piwikTracker = Piwik.getTracker(pkBaseURL + "piwik.php", 1);
  piwikTracker.trackPageView();
  piwikTracker.enableLinkTracking();
} catch( err ) {}
</script><noscript>&lt;p&gt;&lt;img src="http://omarello.com/piwik/piwik.php?idsite=1" style="border:0" alt="" /&gt;&lt;/p&gt;</noscript>
<!-- End Piwik Tracking Tag -->
<!-- *** /WP-Piwik *********************************************************** -->
<script type="text/javascript" src="./Working with Transactions in Grails – train of thought_files/shCore.js"></script>
<script type="text/javascript" src="./Working with Transactions in Grails – train of thought_files/shBrushGroovy.js"></script>
<script type="text/javascript" src="./Working with Transactions in Grails – train of thought_files/shBrushPlain.js"></script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://omarello.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://omarello.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['wrap-lines'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript" src="./Working with Transactions in Grails – train of thought_files/jquery.form.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var _wpcf7 = {"loaderUrl":"http:\/\/omarello.com\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","sending":"Sending ..."};
/* ]]> */
</script>
<script type="text/javascript" src="./Working with Transactions in Grails – train of thought_files/scripts.js"></script>
<!--stats_footer_test--><script src="./Working with Transactions in Grails – train of thought_files/e-201242.js" type="text/javascript"></script>
<script type="text/javascript">
st_go({blog:'15362451',v:'ext',post:'42'});
var load_cmc = function(){linktracker_init(15362451,42,2);};
if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
else load_cmc();
</script><img id="wpstats" src="./Working with Transactions in Grails – train of thought_files/g.gif" alt="">

</body></html>